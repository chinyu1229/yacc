Nonterminals useless in grammar

   binary_op


Rules useless in grammar

   87 binary_op: LOR
   88          | LAND
   89          | cmp_op
   90          | add_op
   91          | mul_op


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 StatementList: StatementList Statement
    3              | Statement

    4 Statement: DeclarationStmt NEWLINE
    5          | SimpleStmt NEWLINE
    6          | Block NEWLINE
    7          | IfStmt NEWLINE
    8          | ForStmt NEWLINE
    9          | PrintStmt NEWLINE
   10          | NEWLINE

   11 SimpleStmt: AssignmentStmt
   12           | ExpressionStmt
   13           | IncDecStmt

   14 DeclarationStmt: VAR ID Type
   15                | VAR ID Type '=' Expression

   16 AssignmentStmt: Expression assign_op Expression

   17 assign_op: '='
   18          | ADD_ASSIGN
   19          | SUB_ASSIGN
   20          | MUL_ASSIGN
   21          | QUO_ASSIGN
   22          | REM_ASSIGN

   23 ExpressionStmt: Expression

   24 IncDecStmt: Expression INC
   25           | Expression DEC

   26 Type: TypeName
   27     | ArrayType

   28 TypeName: INT
   29         | FLOAT
   30         | STRING
   31         | BOOL

   32 $@1: %empty

   33 ArrayType: '[' $@1 Expression ']' Type

   34 $@2: %empty

   35 Block: '{' $@2 StatementList '}'

   36 IfStmt: IF Condition Block
   37       | IF Condition Block ELSE IfStmt
   38       | IF Condition Block ELSE Block

   39 Condition: Expression

   40 ForStmt: FOR Condition Block
   41        | FOR ForClause Block

   42 ForClause: InitStmt ';' Condition ';' PostStmt

   43 InitStmt: SimpleStmt

   44 PostStmt: SimpleStmt

   45 PrintStmt: PRINT '(' Expression ')'
   46          | PRINTLN '(' Expression ')'

   47 Expression: AExpression LOR AExpression
   48           | AExpression

   49 AExpression: AExpression LAND BExpr
   50            | BExpr

   51 BExpr: BExpr cmp_op CExpr
   52      | CExpr

   53 CExpr: CExpr add_op DExpr
   54      | DExpr

   55 DExpr: DExpr mul_op UnaryExpr
   56      | UnaryExpr

   57 UnaryExpr: PrimaryExpr
   58          | unary_op UnaryExpr

   59 cmp_op: EQL
   60       | NEQ
   61       | '<'
   62       | LEQ
   63       | '>'
   64       | GEQ

   65 add_op: '+'
   66       | '-'

   67 mul_op: '*'
   68       | '/'
   69       | '%'

   70 unary_op: '+'
   71         | '-'
   72         | '!'

   73 PrimaryExpr: Oprand
   74            | IndexExpr
   75            | ConversionExpr

   76 Oprand: Literal
   77       | ID
   78       | '(' Expression ')'
   79       | TRUE
   80       | FALSE

   81 Literal: INT_LIT
   82        | FLOAT_LIT
   83        | BOOL_LIT
   84        | '"' STRING_LIT '"'

   85 IndexExpr: PrimaryExpr '[' Expression ']'

   86 ConversionExpr: Type '(' Expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 72
'"' (34) 84
'%' (37) 69
'(' (40) 45 46 78 86
')' (41) 45 46 78 86
'*' (42) 67
'+' (43) 65 70
'-' (45) 66 71
'/' (47) 68
';' (59) 42
'<' (60) 61
'=' (61) 15 17
'>' (62) 63
'[' (91) 33 85
']' (93) 33 85
'{' (123) 35
'}' (125) 35
error (256)
VAR (258) 14 15
INT (259) 28
FLOAT (260) 29
BOOL (261) 31
STRING (262) 30
INC (263) 24
DEC (264) 25
GEQ (265) 64
LEQ (266) 62
EQL (267) 59
NEQ (268) 60
ADD_ASSIGN (269) 18
SUB_ASSIGN (270) 19
MUL_ASSIGN (271) 20
QUO_ASSIGN (272) 21
REM_ASSIGN (273) 22
LAND (274) 49
LOR (275) 47
NEWLINE (276) 4 5 6 7 8 9 10
PRINT (277) 45
PRINTLN (278) 46
IF (279) 36 37 38
ELSE (280) 37 38
FOR (281) 40 41
TRUE (282) 79
FALSE (283) 80
INT_LIT (284) 81
FLOAT_LIT (285) 82
STRING_LIT (286) 84
BOOL_LIT (287) 83
ID (288) 14 15 77


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
Program (52)
    on left: 1, on right: 0
StatementList (53)
    on left: 2 3, on right: 1 2 35
Statement (54)
    on left: 4 5 6 7 8 9 10, on right: 2 3
SimpleStmt (55)
    on left: 11 12 13, on right: 5 43 44
DeclarationStmt (56)
    on left: 14 15, on right: 4
AssignmentStmt (57)
    on left: 16, on right: 11
assign_op (58)
    on left: 17 18 19 20 21 22, on right: 16
ExpressionStmt (59)
    on left: 23, on right: 12
IncDecStmt (60)
    on left: 24 25, on right: 13
Type (61)
    on left: 26 27, on right: 14 15 33 86
TypeName (62)
    on left: 28 29 30 31, on right: 26
ArrayType (63)
    on left: 33, on right: 27
$@1 (64)
    on left: 32, on right: 33
Block (65)
    on left: 35, on right: 6 36 37 38 40 41
$@2 (66)
    on left: 34, on right: 35
IfStmt (67)
    on left: 36 37 38, on right: 7 37
Condition (68)
    on left: 39, on right: 36 37 38 40 42
ForStmt (69)
    on left: 40 41, on right: 8
ForClause (70)
    on left: 42, on right: 41
InitStmt (71)
    on left: 43, on right: 42
PostStmt (72)
    on left: 44, on right: 42
PrintStmt (73)
    on left: 45 46, on right: 9
Expression (74)
    on left: 47 48, on right: 15 16 23 24 25 33 39 45 46 78 85 86
AExpression (75)
    on left: 49 50, on right: 47 48 49
BExpr (76)
    on left: 51 52, on right: 49 50 51
CExpr (77)
    on left: 53 54, on right: 51 52 53
DExpr (78)
    on left: 55 56, on right: 53 54 55
UnaryExpr (79)
    on left: 57 58, on right: 55 56 58
cmp_op (80)
    on left: 59 60 61 62 63 64, on right: 51
add_op (81)
    on left: 65 66, on right: 53
mul_op (82)
    on left: 67 68 69, on right: 55
unary_op (83)
    on left: 70 71 72, on right: 58
PrimaryExpr (84)
    on left: 73 74 75, on right: 57 85
Oprand (85)
    on left: 76 77 78 79 80, on right: 73
Literal (86)
    on left: 81 82 83 84, on right: 76
IndexExpr (87)
    on left: 85, on right: 74
ConversionExpr (88)
    on left: 86, on right: 75


State 0

    0 $accept: . Program $end

    VAR        shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    NEWLINE    shift, and go to state 6
    PRINT      shift, and go to state 7
    PRINTLN    shift, and go to state 8
    IF         shift, and go to state 9
    FOR        shift, and go to state 10
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '{'        shift, and go to state 18
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Program          go to state 24
    StatementList    go to state 25
    Statement        go to state 26
    SimpleStmt       go to state 27
    DeclarationStmt  go to state 28
    AssignmentStmt   go to state 29
    ExpressionStmt   go to state 30
    IncDecStmt       go to state 31
    Type             go to state 32
    TypeName         go to state 33
    ArrayType        go to state 34
    Block            go to state 35
    IfStmt           go to state 36
    ForStmt          go to state 37
    PrintStmt        go to state 38
    Expression       go to state 39
    AExpression      go to state 40
    BExpr            go to state 41
    CExpr            go to state 42
    DExpr            go to state 43
    UnaryExpr        go to state 44
    unary_op         go to state 45
    PrimaryExpr      go to state 46
    Oprand           go to state 47
    Literal          go to state 48
    IndexExpr        go to state 49
    ConversionExpr   go to state 50


State 1

   14 DeclarationStmt: VAR . ID Type
   15                | VAR . ID Type '=' Expression

    ID  shift, and go to state 51


State 2

   28 TypeName: INT .

    $default  reduce using rule 28 (TypeName)


State 3

   29 TypeName: FLOAT .

    $default  reduce using rule 29 (TypeName)


State 4

   31 TypeName: BOOL .

    $default  reduce using rule 31 (TypeName)


State 5

   30 TypeName: STRING .

    $default  reduce using rule 30 (TypeName)


State 6

   10 Statement: NEWLINE .

    $default  reduce using rule 10 (Statement)


State 7

   45 PrintStmt: PRINT . '(' Expression ')'

    '('  shift, and go to state 52


State 8

   46 PrintStmt: PRINTLN . '(' Expression ')'

    '('  shift, and go to state 53


State 9

   36 IfStmt: IF . Condition Block
   37       | IF . Condition Block ELSE IfStmt
   38       | IF . Condition Block ELSE Block

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    Condition       go to state 54
    Expression      go to state 55
    AExpression     go to state 40
    BExpr           go to state 41
    CExpr           go to state 42
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 10

   40 ForStmt: FOR . Condition Block
   41        | FOR . ForClause Block

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    SimpleStmt      go to state 56
    AssignmentStmt  go to state 29
    ExpressionStmt  go to state 30
    IncDecStmt      go to state 31
    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    Condition       go to state 57
    ForClause       go to state 58
    InitStmt        go to state 59
    Expression      go to state 60
    AExpression     go to state 40
    BExpr           go to state 41
    CExpr           go to state 42
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 11

   79 Oprand: TRUE .

    $default  reduce using rule 79 (Oprand)


State 12

   80 Oprand: FALSE .

    $default  reduce using rule 80 (Oprand)


State 13

   81 Literal: INT_LIT .

    $default  reduce using rule 81 (Literal)


State 14

   82 Literal: FLOAT_LIT .

    $default  reduce using rule 82 (Literal)


State 15

   83 Literal: BOOL_LIT .

    $default  reduce using rule 83 (Literal)


State 16

   77 Oprand: ID .

    $default  reduce using rule 77 (Oprand)


State 17

   33 ArrayType: '[' . $@1 Expression ']' Type

    $default  reduce using rule 32 ($@1)

    $@1  go to state 61


State 18

   35 Block: '{' . $@2 StatementList '}'

    $default  reduce using rule 34 ($@2)

    $@2  go to state 62


State 19

   78 Oprand: '(' . Expression ')'

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    Expression      go to state 63
    AExpression     go to state 40
    BExpr           go to state 41
    CExpr           go to state 42
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 20

   70 unary_op: '+' .

    $default  reduce using rule 70 (unary_op)


State 21

   71 unary_op: '-' .

    $default  reduce using rule 71 (unary_op)


State 22

   72 unary_op: '!' .

    $default  reduce using rule 72 (unary_op)


State 23

   84 Literal: '"' . STRING_LIT '"'

    STRING_LIT  shift, and go to state 64


State 24

    0 $accept: Program . $end

    $end  shift, and go to state 65


State 25

    1 Program: StatementList .
    2 StatementList: StatementList . Statement

    VAR        shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    NEWLINE    shift, and go to state 6
    PRINT      shift, and go to state 7
    PRINTLN    shift, and go to state 8
    IF         shift, and go to state 9
    FOR        shift, and go to state 10
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '{'        shift, and go to state 18
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    $default  reduce using rule 1 (Program)

    Statement        go to state 66
    SimpleStmt       go to state 27
    DeclarationStmt  go to state 28
    AssignmentStmt   go to state 29
    ExpressionStmt   go to state 30
    IncDecStmt       go to state 31
    Type             go to state 32
    TypeName         go to state 33
    ArrayType        go to state 34
    Block            go to state 35
    IfStmt           go to state 36
    ForStmt          go to state 37
    PrintStmt        go to state 38
    Expression       go to state 39
    AExpression      go to state 40
    BExpr            go to state 41
    CExpr            go to state 42
    DExpr            go to state 43
    UnaryExpr        go to state 44
    unary_op         go to state 45
    PrimaryExpr      go to state 46
    Oprand           go to state 47
    Literal          go to state 48
    IndexExpr        go to state 49
    ConversionExpr   go to state 50


State 26

    3 StatementList: Statement .

    $default  reduce using rule 3 (StatementList)


State 27

    5 Statement: SimpleStmt . NEWLINE

    NEWLINE  shift, and go to state 67


State 28

    4 Statement: DeclarationStmt . NEWLINE

    NEWLINE  shift, and go to state 68


State 29

   11 SimpleStmt: AssignmentStmt .

    $default  reduce using rule 11 (SimpleStmt)


State 30

   12 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 12 (SimpleStmt)


State 31

   13 SimpleStmt: IncDecStmt .

    $default  reduce using rule 13 (SimpleStmt)


State 32

   86 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 69


State 33

   26 Type: TypeName .

    $default  reduce using rule 26 (Type)


State 34

   27 Type: ArrayType .

    $default  reduce using rule 27 (Type)


State 35

    6 Statement: Block . NEWLINE

    NEWLINE  shift, and go to state 70


State 36

    7 Statement: IfStmt . NEWLINE

    NEWLINE  shift, and go to state 71


State 37

    8 Statement: ForStmt . NEWLINE

    NEWLINE  shift, and go to state 72


State 38

    9 Statement: PrintStmt . NEWLINE

    NEWLINE  shift, and go to state 73


State 39

   16 AssignmentStmt: Expression . assign_op Expression
   23 ExpressionStmt: Expression .
   24 IncDecStmt: Expression . INC
   25           | Expression . DEC

    INC         shift, and go to state 74
    DEC         shift, and go to state 75
    '='         shift, and go to state 76
    ADD_ASSIGN  shift, and go to state 77
    SUB_ASSIGN  shift, and go to state 78
    MUL_ASSIGN  shift, and go to state 79
    QUO_ASSIGN  shift, and go to state 80
    REM_ASSIGN  shift, and go to state 81

    $default  reduce using rule 23 (ExpressionStmt)

    assign_op  go to state 82


State 40

   47 Expression: AExpression . LOR AExpression
   48           | AExpression .
   49 AExpression: AExpression . LAND BExpr

    LAND  shift, and go to state 83
    LOR   shift, and go to state 84

    $default  reduce using rule 48 (Expression)


State 41

   50 AExpression: BExpr .
   51 BExpr: BExpr . cmp_op CExpr

    GEQ  shift, and go to state 85
    LEQ  shift, and go to state 86
    EQL  shift, and go to state 87
    NEQ  shift, and go to state 88
    '<'  shift, and go to state 89
    '>'  shift, and go to state 90

    $default  reduce using rule 50 (AExpression)

    cmp_op  go to state 91


State 42

   52 BExpr: CExpr .
   53 CExpr: CExpr . add_op DExpr

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93

    $default  reduce using rule 52 (BExpr)

    add_op  go to state 94


State 43

   54 CExpr: DExpr .
   55 DExpr: DExpr . mul_op UnaryExpr

    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97

    $default  reduce using rule 54 (CExpr)

    mul_op  go to state 98


State 44

   56 DExpr: UnaryExpr .

    $default  reduce using rule 56 (DExpr)


State 45

   58 UnaryExpr: unary_op . UnaryExpr

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    UnaryExpr       go to state 99
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 46

   57 UnaryExpr: PrimaryExpr .
   85 IndexExpr: PrimaryExpr . '[' Expression ']'

    '['  shift, and go to state 100

    $default  reduce using rule 57 (UnaryExpr)


State 47

   73 PrimaryExpr: Oprand .

    $default  reduce using rule 73 (PrimaryExpr)


State 48

   76 Oprand: Literal .

    $default  reduce using rule 76 (Oprand)


State 49

   74 PrimaryExpr: IndexExpr .

    $default  reduce using rule 74 (PrimaryExpr)


State 50

   75 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 75 (PrimaryExpr)


State 51

   14 DeclarationStmt: VAR ID . Type
   15                | VAR ID . Type '=' Expression

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    '['     shift, and go to state 17

    Type       go to state 101
    TypeName   go to state 33
    ArrayType  go to state 34


State 52

   45 PrintStmt: PRINT '(' . Expression ')'

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    Expression      go to state 102
    AExpression     go to state 40
    BExpr           go to state 41
    CExpr           go to state 42
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 53

   46 PrintStmt: PRINTLN '(' . Expression ')'

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    Expression      go to state 103
    AExpression     go to state 40
    BExpr           go to state 41
    CExpr           go to state 42
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 54

   36 IfStmt: IF Condition . Block
   37       | IF Condition . Block ELSE IfStmt
   38       | IF Condition . Block ELSE Block

    '{'  shift, and go to state 18

    Block  go to state 104


State 55

   39 Condition: Expression .

    $default  reduce using rule 39 (Condition)


State 56

   43 InitStmt: SimpleStmt .

    $default  reduce using rule 43 (InitStmt)


State 57

   40 ForStmt: FOR Condition . Block

    '{'  shift, and go to state 18

    Block  go to state 105


State 58

   41 ForStmt: FOR ForClause . Block

    '{'  shift, and go to state 18

    Block  go to state 106


State 59

   42 ForClause: InitStmt . ';' Condition ';' PostStmt

    ';'  shift, and go to state 107


State 60

   16 AssignmentStmt: Expression . assign_op Expression
   23 ExpressionStmt: Expression .
   24 IncDecStmt: Expression . INC
   25           | Expression . DEC
   39 Condition: Expression .

    INC         shift, and go to state 74
    DEC         shift, and go to state 75
    '='         shift, and go to state 76
    ADD_ASSIGN  shift, and go to state 77
    SUB_ASSIGN  shift, and go to state 78
    MUL_ASSIGN  shift, and go to state 79
    QUO_ASSIGN  shift, and go to state 80
    REM_ASSIGN  shift, and go to state 81

    '{'       reduce using rule 39 (Condition)
    $default  reduce using rule 23 (ExpressionStmt)

    assign_op  go to state 82


State 61

   33 ArrayType: '[' $@1 . Expression ']' Type

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    Expression      go to state 108
    AExpression     go to state 40
    BExpr           go to state 41
    CExpr           go to state 42
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 62

   35 Block: '{' $@2 . StatementList '}'

    VAR        shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    NEWLINE    shift, and go to state 6
    PRINT      shift, and go to state 7
    PRINTLN    shift, and go to state 8
    IF         shift, and go to state 9
    FOR        shift, and go to state 10
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '{'        shift, and go to state 18
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    StatementList    go to state 109
    Statement        go to state 26
    SimpleStmt       go to state 27
    DeclarationStmt  go to state 28
    AssignmentStmt   go to state 29
    ExpressionStmt   go to state 30
    IncDecStmt       go to state 31
    Type             go to state 32
    TypeName         go to state 33
    ArrayType        go to state 34
    Block            go to state 35
    IfStmt           go to state 36
    ForStmt          go to state 37
    PrintStmt        go to state 38
    Expression       go to state 39
    AExpression      go to state 40
    BExpr            go to state 41
    CExpr            go to state 42
    DExpr            go to state 43
    UnaryExpr        go to state 44
    unary_op         go to state 45
    PrimaryExpr      go to state 46
    Oprand           go to state 47
    Literal          go to state 48
    IndexExpr        go to state 49
    ConversionExpr   go to state 50


State 63

   78 Oprand: '(' Expression . ')'

    ')'  shift, and go to state 110


State 64

   84 Literal: '"' STRING_LIT . '"'

    '"'  shift, and go to state 111


State 65

    0 $accept: Program $end .

    $default  accept


State 66

    2 StatementList: StatementList Statement .

    $default  reduce using rule 2 (StatementList)


State 67

    5 Statement: SimpleStmt NEWLINE .

    $default  reduce using rule 5 (Statement)


State 68

    4 Statement: DeclarationStmt NEWLINE .

    $default  reduce using rule 4 (Statement)


State 69

   86 ConversionExpr: Type '(' . Expression ')'

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    Expression      go to state 112
    AExpression     go to state 40
    BExpr           go to state 41
    CExpr           go to state 42
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 70

    6 Statement: Block NEWLINE .

    $default  reduce using rule 6 (Statement)


State 71

    7 Statement: IfStmt NEWLINE .

    $default  reduce using rule 7 (Statement)


State 72

    8 Statement: ForStmt NEWLINE .

    $default  reduce using rule 8 (Statement)


State 73

    9 Statement: PrintStmt NEWLINE .

    $default  reduce using rule 9 (Statement)


State 74

   24 IncDecStmt: Expression INC .

    $default  reduce using rule 24 (IncDecStmt)


State 75

   25 IncDecStmt: Expression DEC .

    $default  reduce using rule 25 (IncDecStmt)


State 76

   17 assign_op: '=' .

    $default  reduce using rule 17 (assign_op)


State 77

   18 assign_op: ADD_ASSIGN .

    $default  reduce using rule 18 (assign_op)


State 78

   19 assign_op: SUB_ASSIGN .

    $default  reduce using rule 19 (assign_op)


State 79

   20 assign_op: MUL_ASSIGN .

    $default  reduce using rule 20 (assign_op)


State 80

   21 assign_op: QUO_ASSIGN .

    $default  reduce using rule 21 (assign_op)


State 81

   22 assign_op: REM_ASSIGN .

    $default  reduce using rule 22 (assign_op)


State 82

   16 AssignmentStmt: Expression assign_op . Expression

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    Expression      go to state 113
    AExpression     go to state 40
    BExpr           go to state 41
    CExpr           go to state 42
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 83

   49 AExpression: AExpression LAND . BExpr

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    BExpr           go to state 114
    CExpr           go to state 42
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 84

   47 Expression: AExpression LOR . AExpression

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    AExpression     go to state 115
    BExpr           go to state 41
    CExpr           go to state 42
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 85

   64 cmp_op: GEQ .

    $default  reduce using rule 64 (cmp_op)


State 86

   62 cmp_op: LEQ .

    $default  reduce using rule 62 (cmp_op)


State 87

   59 cmp_op: EQL .

    $default  reduce using rule 59 (cmp_op)


State 88

   60 cmp_op: NEQ .

    $default  reduce using rule 60 (cmp_op)


State 89

   61 cmp_op: '<' .

    $default  reduce using rule 61 (cmp_op)


State 90

   63 cmp_op: '>' .

    $default  reduce using rule 63 (cmp_op)


State 91

   51 BExpr: BExpr cmp_op . CExpr

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    CExpr           go to state 116
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 92

   65 add_op: '+' .

    $default  reduce using rule 65 (add_op)


State 93

   66 add_op: '-' .

    $default  reduce using rule 66 (add_op)


State 94

   53 CExpr: CExpr add_op . DExpr

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    DExpr           go to state 117
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 95

   67 mul_op: '*' .

    $default  reduce using rule 67 (mul_op)


State 96

   68 mul_op: '/' .

    $default  reduce using rule 68 (mul_op)


State 97

   69 mul_op: '%' .

    $default  reduce using rule 69 (mul_op)


State 98

   55 DExpr: DExpr mul_op . UnaryExpr

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    UnaryExpr       go to state 118
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 99

   58 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 58 (UnaryExpr)


State 100

   85 IndexExpr: PrimaryExpr '[' . Expression ']'

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    Expression      go to state 119
    AExpression     go to state 40
    BExpr           go to state 41
    CExpr           go to state 42
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 101

   14 DeclarationStmt: VAR ID Type .
   15                | VAR ID Type . '=' Expression

    '='  shift, and go to state 120

    $default  reduce using rule 14 (DeclarationStmt)


State 102

   45 PrintStmt: PRINT '(' Expression . ')'

    ')'  shift, and go to state 121


State 103

   46 PrintStmt: PRINTLN '(' Expression . ')'

    ')'  shift, and go to state 122


State 104

   36 IfStmt: IF Condition Block .
   37       | IF Condition Block . ELSE IfStmt
   38       | IF Condition Block . ELSE Block

    ELSE  shift, and go to state 123

    $default  reduce using rule 36 (IfStmt)


State 105

   40 ForStmt: FOR Condition Block .

    $default  reduce using rule 40 (ForStmt)


State 106

   41 ForStmt: FOR ForClause Block .

    $default  reduce using rule 41 (ForStmt)


State 107

   42 ForClause: InitStmt ';' . Condition ';' PostStmt

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    Condition       go to state 124
    Expression      go to state 55
    AExpression     go to state 40
    BExpr           go to state 41
    CExpr           go to state 42
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 108

   33 ArrayType: '[' $@1 Expression . ']' Type

    ']'  shift, and go to state 125


State 109

    2 StatementList: StatementList . Statement
   35 Block: '{' $@2 StatementList . '}'

    VAR        shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    NEWLINE    shift, and go to state 6
    PRINT      shift, and go to state 7
    PRINTLN    shift, and go to state 8
    IF         shift, and go to state 9
    FOR        shift, and go to state 10
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '{'        shift, and go to state 18
    '}'        shift, and go to state 126
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Statement        go to state 66
    SimpleStmt       go to state 27
    DeclarationStmt  go to state 28
    AssignmentStmt   go to state 29
    ExpressionStmt   go to state 30
    IncDecStmt       go to state 31
    Type             go to state 32
    TypeName         go to state 33
    ArrayType        go to state 34
    Block            go to state 35
    IfStmt           go to state 36
    ForStmt          go to state 37
    PrintStmt        go to state 38
    Expression       go to state 39
    AExpression      go to state 40
    BExpr            go to state 41
    CExpr            go to state 42
    DExpr            go to state 43
    UnaryExpr        go to state 44
    unary_op         go to state 45
    PrimaryExpr      go to state 46
    Oprand           go to state 47
    Literal          go to state 48
    IndexExpr        go to state 49
    ConversionExpr   go to state 50


State 110

   78 Oprand: '(' Expression ')' .

    $default  reduce using rule 78 (Oprand)


State 111

   84 Literal: '"' STRING_LIT '"' .

    $default  reduce using rule 84 (Literal)


State 112

   86 ConversionExpr: Type '(' Expression . ')'

    ')'  shift, and go to state 127


State 113

   16 AssignmentStmt: Expression assign_op Expression .

    $default  reduce using rule 16 (AssignmentStmt)


State 114

   49 AExpression: AExpression LAND BExpr .
   51 BExpr: BExpr . cmp_op CExpr

    GEQ  shift, and go to state 85
    LEQ  shift, and go to state 86
    EQL  shift, and go to state 87
    NEQ  shift, and go to state 88
    '<'  shift, and go to state 89
    '>'  shift, and go to state 90

    $default  reduce using rule 49 (AExpression)

    cmp_op  go to state 91


State 115

   47 Expression: AExpression LOR AExpression .
   49 AExpression: AExpression . LAND BExpr

    LAND  shift, and go to state 83

    $default  reduce using rule 47 (Expression)


State 116

   51 BExpr: BExpr cmp_op CExpr .
   53 CExpr: CExpr . add_op DExpr

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93

    $default  reduce using rule 51 (BExpr)

    add_op  go to state 94


State 117

   53 CExpr: CExpr add_op DExpr .
   55 DExpr: DExpr . mul_op UnaryExpr

    '*'  shift, and go to state 95
    '/'  shift, and go to state 96
    '%'  shift, and go to state 97

    $default  reduce using rule 53 (CExpr)

    mul_op  go to state 98


State 118

   55 DExpr: DExpr mul_op UnaryExpr .

    $default  reduce using rule 55 (DExpr)


State 119

   85 IndexExpr: PrimaryExpr '[' Expression . ']'

    ']'  shift, and go to state 128


State 120

   15 DeclarationStmt: VAR ID Type '=' . Expression

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    Expression      go to state 129
    AExpression     go to state 40
    BExpr           go to state 41
    CExpr           go to state 42
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 121

   45 PrintStmt: PRINT '(' Expression ')' .

    $default  reduce using rule 45 (PrintStmt)


State 122

   46 PrintStmt: PRINTLN '(' Expression ')' .

    $default  reduce using rule 46 (PrintStmt)


State 123

   37 IfStmt: IF Condition Block ELSE . IfStmt
   38       | IF Condition Block ELSE . Block

    IF   shift, and go to state 9
    '{'  shift, and go to state 18

    Block   go to state 130
    IfStmt  go to state 131


State 124

   42 ForClause: InitStmt ';' Condition . ';' PostStmt

    ';'  shift, and go to state 132


State 125

   33 ArrayType: '[' $@1 Expression ']' . Type

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    '['     shift, and go to state 17

    Type       go to state 133
    TypeName   go to state 33
    ArrayType  go to state 34


State 126

   35 Block: '{' $@2 StatementList '}' .

    $default  reduce using rule 35 (Block)


State 127

   86 ConversionExpr: Type '(' Expression ')' .

    $default  reduce using rule 86 (ConversionExpr)


State 128

   85 IndexExpr: PrimaryExpr '[' Expression ']' .

    $default  reduce using rule 85 (IndexExpr)


State 129

   15 DeclarationStmt: VAR ID Type '=' Expression .

    $default  reduce using rule 15 (DeclarationStmt)


State 130

   38 IfStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 38 (IfStmt)


State 131

   37 IfStmt: IF Condition Block ELSE IfStmt .

    $default  reduce using rule 37 (IfStmt)


State 132

   42 ForClause: InitStmt ';' Condition ';' . PostStmt

    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    STRING     shift, and go to state 5
    TRUE       shift, and go to state 11
    FALSE      shift, and go to state 12
    INT_LIT    shift, and go to state 13
    FLOAT_LIT  shift, and go to state 14
    BOOL_LIT   shift, and go to state 15
    ID         shift, and go to state 16
    '['        shift, and go to state 17
    '('        shift, and go to state 19
    '+'        shift, and go to state 20
    '-'        shift, and go to state 21
    '!'        shift, and go to state 22
    '"'        shift, and go to state 23

    SimpleStmt      go to state 134
    AssignmentStmt  go to state 29
    ExpressionStmt  go to state 30
    IncDecStmt      go to state 31
    Type            go to state 32
    TypeName        go to state 33
    ArrayType       go to state 34
    PostStmt        go to state 135
    Expression      go to state 39
    AExpression     go to state 40
    BExpr           go to state 41
    CExpr           go to state 42
    DExpr           go to state 43
    UnaryExpr       go to state 44
    unary_op        go to state 45
    PrimaryExpr     go to state 46
    Oprand          go to state 47
    Literal         go to state 48
    IndexExpr       go to state 49
    ConversionExpr  go to state 50


State 133

   33 ArrayType: '[' $@1 Expression ']' Type .

    $default  reduce using rule 33 (ArrayType)


State 134

   44 PostStmt: SimpleStmt .

    $default  reduce using rule 44 (PostStmt)


State 135

   42 ForClause: InitStmt ';' Condition ';' PostStmt .

    $default  reduce using rule 42 (ForClause)
